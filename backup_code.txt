switch (Xpos)
  {
  case 0:
    dead = true;
    return;
  case 19:
    dead = true;
    return;
  }
  switch (Ypos)
  {
  case 0:
    dead = true;
    return;
  case 19:
    dead = true;
    return;
  }
  // end of checking the boarder

  if (Xpos == apple.xpos && Ypos == apple.ypos)
  {
    // apple.ate == true;
    apple.randomize();
    score++;
  }

  switch (input)
  { // checking what was inputed
  case 119:
    direction = 'u';
    break;
  case 87:
    direction = 'u';
    break;
  case 97:
    direction = 'l';
    break;
  case 65:
    direction = 'l';
    break;
  case 115:
    direction = 'd';
    break;
  case 83:
    direction = 'd';
    break;
  case 100:
    direction = 'r';
    break;
  case 68:
    direction = 'r';
    break;
  } // end of checking whatwas inputed

  if (direction == 'r')
  {
    Xpos++;
  }
  if (direction == 'd')
  {
    Ypos++;
  }
  if (direction == 'l')
  {
    Xpos--;
  }
  if (direction == 'u')
  {
    Ypos--;
  }


void Worm::print_field(Food &apple)
{
    // system("clear");
    for (int y = 0; y < 20; y++)
    {
        for (int x = 0; x < 20; x++)
        {
            switch (y)
            {
            case 0:
                cout << 'o';
                break;

            case 19:
                cout << 'o';
                break;

            default:
                switch (x)
                {
                case 0:
                    cout << 'o';
                    break;

                case 19:
                    cout << 'o';
                    break;
                default:
                    print_body(x, y, apple);
                    break;
                }
                break;
            }
        }
        cout << endl;
    }
} // print_field